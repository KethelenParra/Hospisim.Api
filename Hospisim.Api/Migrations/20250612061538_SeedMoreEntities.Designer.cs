// <auto-generated />
using System;
using Hospisim.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospisim.Api.Migrations
{
    [DbContext(typeof(HospisimDbContext))]
    [Migration("20250612061538_SeedMoreEntities")]
    partial class SeedMoreEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospisim.Api.Models.AltaHospitalar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CondicaoPaciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstrucoesPosAlta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InternacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InternacaoId")
                        .IsUnique();

                    b.ToTable("AltasHospitalares");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-bbbb-bbbb-bbbb-bbbbbbbb0001"),
                            CondicaoPaciente = "Estável",
                            Data = new DateTime(2025, 6, 3, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            InstrucoesPosAlta = "Repouso e fisioterapia",
                            InternacaoId = new Guid("11111111-aaaa-aaaa-aaaa-aaaaaaaa0001")
                        },
                        new
                        {
                            Id = new Guid("22222222-bbbb-bbbb-bbbb-bbbbbbbb0002"),
                            CondicaoPaciente = "Melhorado",
                            Data = new DateTime(2025, 6, 14, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            InstrucoesPosAlta = "Usar máscara de oxigênio em casa",
                            InternacaoId = new Guid("11111111-aaaa-aaaa-aaaa-aaaaaaaa0002")
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Atendimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfissionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProntuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("ProntuarioId");

                    b.ToTable("Atendimentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dddddddd-0000-0000-0000-000000000001"),
                            DataHora = new DateTime(2025, 6, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Sala 01",
                            PacienteId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ProfissionalId = new Guid("bbbbbbbb-0000-0000-0000-000000000001"),
                            ProntuarioId = new Guid("cccccccc-0000-0000-0000-000000000001"),
                            Status = "Realizado",
                            Tipo = "Consulta"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-0000-0000-0000-000000000002"),
                            DataHora = new DateTime(2025, 6, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Emergência",
                            PacienteId = new Guid("33333333-3333-3333-3333-333333333333"),
                            ProfissionalId = new Guid("bbbbbbbb-0000-0000-0000-000000000002"),
                            ProntuarioId = new Guid("cccccccc-0000-0000-0000-000000000002"),
                            Status = "EmAndamento",
                            Tipo = "Emergencia"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-0000-0000-0000-000000000003"),
                            DataHora = new DateTime(2025, 6, 10, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Local = "Consultório 3",
                            PacienteId = new Guid("33333333-3333-3333-3333-333333333333"),
                            ProfissionalId = new Guid("bbbbbbbb-0000-0000-0000-000000000003"),
                            ProntuarioId = new Guid("cccccccc-0000-0000-0000-000000000003"),
                            Status = "EmAndamento",
                            Tipo = "Consulta"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-0000-0000-0000-000000000004"),
                            DataHora = new DateTime(2025, 6, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Local = "Sala 02",
                            PacienteId = new Guid("44444444-4444-4444-4444-444444444444"),
                            ProfissionalId = new Guid("bbbbbbbb-0000-0000-0000-000000000004"),
                            ProntuarioId = new Guid("cccccccc-0000-0000-0000-000000000004"),
                            Status = "Cancelado",
                            Tipo = "Consulta"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Especialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-0000-0000-0000-000000000001"),
                            Nome = "Cardiologia"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-0000-0000-0000-000000000002"),
                            Nome = "Pediatria"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-0000-0000-0000-000000000003"),
                            Nome = "Ortopedia"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-0000-0000-0000-000000000004"),
                            Nome = "Dermatologia"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-0000-0000-0000-000000000005"),
                            Nome = "Neurologia"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-0000-0000-0000-000000000006"),
                            Nome = "Ginecologia"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Exame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtendimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataRealizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtendimentoId");

                    b.ToTable("Exames");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffffffff-0000-0000-0000-000000000001"),
                            AtendimentoId = new Guid("dddddddd-0000-0000-0000-000000000001"),
                            DataRealizacao = new DateTime(2025, 6, 6, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DataSolicitacao = new DateTime(2025, 7, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Resultado = "Hemograma normal",
                            Tipo = "Sangue"
                        },
                        new
                        {
                            Id = new Guid("ffffffff-0000-0000-0000-000000000002"),
                            AtendimentoId = new Guid("dddddddd-0000-0000-0000-000000000004"),
                            DataRealizacao = new DateTime(2025, 6, 12, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DataSolicitacao = new DateTime(2025, 6, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Resultado = "Sem fraturas",
                            Tipo = "Raio-X"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Internacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtendimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("Leito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoInternacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacoesClinicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanoSaudeUtilizado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrevisaoAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Quarto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusInternacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtendimentoId")
                        .IsUnique();

                    b.HasIndex("PacienteId");

                    b.ToTable("Internacoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-aaaa-aaaa-aaaa-aaaaaaaa0001"),
                            AtendimentoId = new Guid("dddddddd-0000-0000-0000-000000000002"),
                            DataEntrada = new DateTime(2025, 6, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Leito = "L-15",
                            MotivoInternacao = "Observação pós-cirurgia",
                            ObservacoesClinicas = "Sem complicações",
                            PacienteId = new Guid("22222222-2222-2222-2222-222222222222"),
                            PlanoSaudeUtilizado = "Unimed",
                            PrevisaoAlta = new DateTime(2025, 6, 9, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Quarto = "Q-3",
                            Setor = "Clínica Geral",
                            StatusInternacao = "Ativa"
                        },
                        new
                        {
                            Id = new Guid("11111111-aaaa-aaaa-aaaa-aaaaaaaa0002"),
                            AtendimentoId = new Guid("dddddddd-0000-0000-0000-000000000003"),
                            DataEntrada = new DateTime(2025, 6, 10, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Leito = "L-20",
                            MotivoInternacao = "Tratamento de pneumonia",
                            ObservacoesClinicas = "Oxigenoterapia",
                            PacienteId = new Guid("33333333-3333-3333-3333-333333333333"),
                            PlanoSaudeUtilizado = "SulAmérica",
                            PrevisaoAlta = new DateTime(2025, 6, 14, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Quarto = "Q-5",
                            Setor = "Pulmonar",
                            StatusInternacao = "Ativa"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnderecoCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCartaoSUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossuiPlanoSaude")
                        .HasColumnType("bit");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoSanguineo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CPF = "12345678901",
                            DataNascimento = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana.silva@gmail.com",
                            EnderecoCompleto = "Rua das Flores, 123, Bairro Rosas",
                            EstadoCivil = "Solteiro",
                            NomeCompleto = "Ana Silva",
                            NumeroCartaoSUS = "9876543210",
                            PossuiPlanoSaude = true,
                            Sexo = "Feminino",
                            Telefone = "(11) 91234-5678",
                            TipoSanguineo = "APositivo"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CPF = "23456789012",
                            DataNascimento = new DateTime(1975, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bruno.costa@gmail.com",
                            EnderecoCompleto = "Av. Central, 456, Centro",
                            EstadoCivil = "Casado",
                            NomeCompleto = "Bruno Costa",
                            NumeroCartaoSUS = "1234509876",
                            PossuiPlanoSaude = false,
                            Sexo = "Masculino",
                            Telefone = "(21) 98765-4321",
                            TipoSanguineo = "ONegativo"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CPF = "34567890123",
                            DataNascimento = new DateTime(1990, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carla.souza@gmail.com",
                            EnderecoCompleto = "Praça das Árvores, 789, Bairro Verde",
                            EstadoCivil = "Divorciado",
                            NomeCompleto = "Carla Souza",
                            NumeroCartaoSUS = "1122334455",
                            PossuiPlanoSaude = true,
                            Sexo = "Feminino",
                            Telefone = "(31) 99876-5432",
                            TipoSanguineo = "BPositivo"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CPF = "45678901234",
                            DataNascimento = new DateTime(1985, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "daniel.oliveira@exemplo.com",
                            EnderecoCompleto = "Rua dos Limoeiros, 50, Centro",
                            EstadoCivil = "Viuvo",
                            NomeCompleto = "Daniel Oliveira",
                            NumeroCartaoSUS = "5566778899",
                            PossuiPlanoSaude = true,
                            Sexo = "Masculino",
                            Telefone = "(41) 97654-3210",
                            TipoSanguineo = "ABNegativo"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CPF = "56789012345",
                            DataNascimento = new DateTime(1992, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elaine.pereira@exemplo.com",
                            EnderecoCompleto = "Av. Brasil, 200, Bairro União",
                            EstadoCivil = "Solteiro",
                            NomeCompleto = "Elaine Pereira",
                            NumeroCartaoSUS = "6677889900",
                            PossuiPlanoSaude = false,
                            Sexo = "Feminino",
                            Telefone = "(51) 91234-9876",
                            TipoSanguineo = "ONegativo"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Prescricao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtendimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfissionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReacoesAdversas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPrescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaAdministracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtendimentoId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Prescricoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eeeeeeee-0000-0000-0000-000000000001"),
                            AtendimentoId = new Guid("dddddddd-0000-0000-0000-000000000001"),
                            DataInicio = new DateTime(2025, 6, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Dosagem = "1 comprimido",
                            Frequencia = "12/12h",
                            Medicamento = "Dipirona 500mg",
                            Observacoes = "",
                            ProfissionalId = new Guid("bbbbbbbb-0000-0000-0000-000000000001"),
                            ReacoesAdversas = "",
                            StatusPrescricao = "Ativa",
                            ViaAdministracao = "Oral"
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-0000-0000-0000-000000000002"),
                            AtendimentoId = new Guid("dddddddd-0000-0000-0000-000000000003"),
                            DataInicio = new DateTime(2025, 6, 10, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Dosagem = "1 comprimido",
                            Frequencia = "8/8h",
                            Medicamento = "Paracetamol 750mg",
                            Observacoes = "Tomar após refeição",
                            ProfissionalId = new Guid("bbbbbbbb-0000-0000-0000-000000000003"),
                            ReacoesAdversas = "",
                            StatusPrescricao = "Ativa",
                            ViaAdministracao = "Oral"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.ProfissionalSaude", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CargaHorariaSemanal")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EspecialidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroConselho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRegistro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadeId");

                    b.ToTable("Profissionais");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbbbbbbb-0000-0000-0000-000000000001"),
                            Ativo = true,
                            CPF = "11122233344",
                            CargaHorariaSemanal = 40,
                            DataAdmissao = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marina.souza@hospisim.com",
                            EspecialidadeId = new Guid("aaaaaaaa-0000-0000-0000-000000000001"),
                            NomeCompleto = "Dra. Marina Souza",
                            RegistroConselho = "12345-CRM",
                            Telefone = "(11)91234-0001",
                            TipoRegistro = "CRM",
                            Turno = "Manha"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-0000-0000-0000-000000000002"),
                            Ativo = true,
                            CPF = "22233344455",
                            CargaHorariaSemanal = 30,
                            DataAdmissao = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rafael.lima@hospisim.com",
                            EspecialidadeId = new Guid("aaaaaaaa-0000-0000-0000-000000000002"),
                            NomeCompleto = "Dr. Rafael Lima",
                            RegistroConselho = "67890-CRM",
                            Telefone = "(21)98765-0002",
                            TipoRegistro = "CRM",
                            Turno = "Tarde"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-0000-0000-0000-000000000003"),
                            Ativo = true,
                            CPF = "33344455566",
                            CargaHorariaSemanal = 35,
                            DataAdmissao = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lucas.fernandes@hospisim.com",
                            EspecialidadeId = new Guid("aaaaaaaa-0000-0000-0000-000000000003"),
                            NomeCompleto = "Dr. Lucas Fernandes",
                            RegistroConselho = "34567-CRM",
                            Telefone = "(31)91234-0003",
                            TipoRegistro = "CRM",
                            Turno = "Noite"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-0000-0000-0000-000000000004"),
                            Ativo = false,
                            CPF = "44455566677",
                            CargaHorariaSemanal = 45,
                            DataAdmissao = new DateTime(2019, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paula.ribeiro@hospisim.com",
                            EspecialidadeId = new Guid("aaaaaaaa-0000-0000-0000-000000000004"),
                            NomeCompleto = "Dra. Paula Ribeiro",
                            RegistroConselho = "45678-CRM",
                            Telefone = "(41)98765-0004",
                            TipoRegistro = "CRM",
                            Turno = "Manha"
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.Prontuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Prontuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cccccccc-0000-0000-0000-000000000001"),
                            DataAbertura = new DateTime(2025, 6, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Numero = "PRT-1001",
                            Observacoes = "Prontuário inicial de Ana Silva",
                            PacienteId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-0000-0000-0000-000000000002"),
                            DataAbertura = new DateTime(2025, 6, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Numero = "PRT-1002",
                            Observacoes = "Prontuário de Bruno Costa",
                            PacienteId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-0000-0000-0000-000000000003"),
                            DataAbertura = new DateTime(2025, 6, 10, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            Numero = "PRT-1003",
                            Observacoes = "Prontuário de Carla no retorno",
                            PacienteId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-0000-0000-0000-000000000004"),
                            DataAbertura = new DateTime(2025, 6, 12, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            Numero = "PRT-1004",
                            Observacoes = "Prontuário de Daniel Oliveira",
                            PacienteId = new Guid("44444444-4444-4444-4444-444444444444")
                        });
                });

            modelBuilder.Entity("Hospisim.Api.Models.AltaHospitalar", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Internacao", "Internacao")
                        .WithOne("AltaHospitalar")
                        .HasForeignKey("Hospisim.Api.Models.AltaHospitalar", "InternacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Internacao");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Atendimento", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospisim.Api.Models.ProfissionalSaude", "Profissional")
                        .WithMany("Atendimentos")
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hospisim.Api.Models.Prontuario", "Prontuario")
                        .WithMany("Atendimentos")
                        .HasForeignKey("ProntuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Profissional");

                    b.Navigation("Prontuario");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Exame", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Atendimento", "Atendimento")
                        .WithMany("Exames")
                        .HasForeignKey("AtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atendimento");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Internacao", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Atendimento", "Atendimento")
                        .WithOne("Internacao")
                        .HasForeignKey("Hospisim.Api.Models.Internacao", "AtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospisim.Api.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Atendimento");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Prescricao", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Atendimento", "Atendimento")
                        .WithMany("Prescricoes")
                        .HasForeignKey("AtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospisim.Api.Models.ProfissionalSaude", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atendimento");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("Hospisim.Api.Models.ProfissionalSaude", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Especialidade", "Especialidade")
                        .WithMany("Profissionais")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Prontuario", b =>
                {
                    b.HasOne("Hospisim.Api.Models.Paciente", "Paciente")
                        .WithMany("Prontuarios")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Atendimento", b =>
                {
                    b.Navigation("Exames");

                    b.Navigation("Internacao")
                        .IsRequired();

                    b.Navigation("Prescricoes");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Especialidade", b =>
                {
                    b.Navigation("Profissionais");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Internacao", b =>
                {
                    b.Navigation("AltaHospitalar")
                        .IsRequired();
                });

            modelBuilder.Entity("Hospisim.Api.Models.Paciente", b =>
                {
                    b.Navigation("Prontuarios");
                });

            modelBuilder.Entity("Hospisim.Api.Models.ProfissionalSaude", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("Hospisim.Api.Models.Prontuario", b =>
                {
                    b.Navigation("Atendimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
