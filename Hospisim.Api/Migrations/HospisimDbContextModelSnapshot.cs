// <auto-generated />
using System;
using Hospisim.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospisim.Api.Migrations
{
    [DbContext(typeof(HospisimDbContext))]
    partial class HospisimDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospisim.Api.Models.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnderecoCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCartaoSUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossuiPlanoSaude")
                        .HasColumnType("bit");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoSanguineo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CPF = "12345678901",
                            DataNascimento = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana.silva@gmail.com",
                            EnderecoCompleto = "Rua das Flores, 123, Bairro Rosas",
                            EstadoCivil = "Solteiro",
                            NomeCompleto = "Ana Silva",
                            NumeroCartaoSUS = "9876543210",
                            PossuiPlanoSaude = true,
                            Sexo = "Feminino",
                            Telefone = "(11) 91234-5678",
                            TipoSanguineo = "APositivo"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CPF = "23456789012",
                            DataNascimento = new DateTime(1975, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bruno.costa@gmail.com",
                            EnderecoCompleto = "Av. Central, 456, Centro",
                            EstadoCivil = "Casado",
                            NomeCompleto = "Bruno Costa",
                            NumeroCartaoSUS = "1234509876",
                            PossuiPlanoSaude = false,
                            Sexo = "Masculino",
                            Telefone = "(21) 98765-4321",
                            TipoSanguineo = "ONegativo"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CPF = "34567890123",
                            DataNascimento = new DateTime(1990, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carla.souza@gmail.com",
                            EnderecoCompleto = "Praça das Árvores, 789, Bairro Verde",
                            EstadoCivil = "Divorciado",
                            NomeCompleto = "Carla Souza",
                            NumeroCartaoSUS = "1122334455",
                            PossuiPlanoSaude = true,
                            Sexo = "Feminino",
                            Telefone = "(31) 99876-5432",
                            TipoSanguineo = "BPositivo"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
